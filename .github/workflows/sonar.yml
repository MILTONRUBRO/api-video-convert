name: Deploy

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
    types: [opened, synchronize, reopened]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Project with Maven
        run: |
          echo "Construindo o projeto..."
          mvn clean install

  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Tests
        run: |
          mvn test -Dspring.profiles.active=test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: target/site/jacoco/jacoco.xml

  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
        run: |
            ./mvnw clean verify jacoco:report sonar:sonar \
            -Dsonar.projectKey=${{ secrets.PROJECT_KEY }}\
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=https://sonarcloud.io/ \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.coverage.exclusions=/config/,/model/,/dto/,/exception/\
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
