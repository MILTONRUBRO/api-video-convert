name: Build, Analyze and Deploy

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/jacoco
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and run tests with coverage
        run: mvn clean verify jacoco:report -Dspring.profiles.active=test

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.PROJECT_KEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Deploy to Heroku
        if: github.ref == 'refs/heads/master'
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          echo "machine api.heroku.com" > ~/.netrc
          echo "  login $HEROKU_API_KEY" >> ~/.netrc
          echo "machine git.heroku.com" >> ~/.netrc
          echo "  login $HEROKU_API_KEY" >> ~/.netrc

          git config --global user.email "ci@example.com"
          git config --global user.name "CI/CD Bot"

          git remote add heroku https://git.heroku.com/${HEROKU_APP_NAME}.git
          git push heroku HEAD:master -f
